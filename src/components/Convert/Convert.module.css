import {Form, Field, Formik, ErrorMessage} from "formik";
import ConvertFormSchema from "../../validationForms/ConvertFormSchema";

export const ConvertForm = (props) => {

    let supported_symbols = [];
    for (let [key, value] of Object.entries(props.supported_symbols)) {
        supported_symbols.push(`${key}: ${value}`);
    }
    let supported_symbols_option = [<option style={{display: "none"}}></option>, supported_symbols.map(s =>
        <option key={s} value={s}>{s}</option>)];

    return (
        <Form>
            <div>
                <label htmlFor='value_from'>from</label>
                <Field as={'select'} name={'value_from'}>
                    {supported_symbols_option}
                </Field>
                <ErrorMessage name={'value_from'} component={'div'}/>
            </div>
            <div>
                <label htmlFor='value_to'>to</label>
                <Field as={'select'} name={'value_to'}>
                    {supported_symbols_option}
                </Field>
                <ErrorMessage name={'value_to'} component={'div'}/>
            </div>
            <div>
                <label htmlFor="amount">amount</label>
                <Field type={'text'} name={'amount'} autoComplete={'off'}/>
                <ErrorMessage name={'amount'} component={'div'}/>
            </div>
            <button>Submit</button>
        </Form>
    )
}

const Convert = (props) => {

    let onSubmit = (values) => {
        let symbols = Object.values(values).map(s => s.substr(0, 3));
        let value_from = symbols[0];
        let value_to = symbols[1];
        let amount = symbols[2];
        props.getConvertRate(value_from, value_to, amount)
    }

    return (
        <div>
            <Formik
                initialValues={{value_from: '', value_to: '', amount: ''}}
                validationSchema={ConvertFormSchema}
                onSubmit={onSubmit}
            >
                {({vales}) => {
                    return <ConvertForm supported_symbols={props.supported_symbols}/>
                }}
            </Formik>
            <div>
                {props.result_rate}
            </div>
        </div>
    )
}
export default Convert;